// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id             Int        @id @default(autoincrement())
  name           String
  slug           String     @unique
  order          Int        @default(0)
  seoTitle       String?    @map("seo_title")
  seoDescription String?    @map("seo_description")
  coverImageUrl  String?    @map("cover_image_url")
  parentId       Int?
  parent         Category?  @relation("CategoryToChildren", fields: [parentId], references: [id])
  children       Category[] @relation("CategoryToChildren")

  products            Product[] @relation("ProductToCategory")
  subcategoryProducts Product[] @relation("ProductToSubcategory")

  @@index([parentId])
}

model Product {
  id               Int      @id @default(autoincrement())
  name             String
  slug             String   @unique
  sku              String   @unique
  priceCents       Int      @map("price_cents")
  shortDescription String?  @map("short_description")
  specs            Json? // key:value characteristics
  inStock          Boolean  @default(true) @map("in_stock")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  categoryId    Int
  subcategoryId Int?
  category      Category  @relation("ProductToCategory", fields: [categoryId], references: [id])
  subcategory   Category? @relation("ProductToSubcategory", fields: [subcategoryId], references: [id])

  images ProductImage[]

  seoTitle       String? @map("seo_title")
  seoDescription String? @map("seo_description")

  @@index([categoryId])
  @@index([subcategoryId])
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  url       String
  isCover   Boolean @default(false) @map("is_cover")
  sortOrder Int     @default(0) @map("sort_order")
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
}
